<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>Route & Worker Info</title>
  <style>
    * {
      box-sizing: border-box;
      margin: 0;
      padding: 0;
    }

    body, html {
      font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
      background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
      padding-top: 100px;
      display: flex;
      flex-direction: column;
      align-items: center;
      padding-left: 20px;
      padding-right: 20px;
      min-height: 100vh;
    }

    nav {
      background: rgba(44, 62, 80, 0.95);
      backdrop-filter: blur(15px);
      padding: 15px 20px;
      width: 100%;
      position: fixed;
      top: 0;
      left: 0;
      z-index: 1000;
      box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
    }

    .nav-container {
      display: flex;
      justify-content: space-between;
      align-items: center;
      max-width: 1200px;
      margin: auto;
    }

    .logo {
      height: 50px;
      width: auto;
      border-radius: 25px;
      transition: transform 0.3s ease;
    }

    .logo:hover {
      transform: scale(1.1);
    }

    nav ul {
      list-style: none;
      display: flex;
      justify-content: flex-end;
      align-items: center;
    }

    nav ul li {
      margin: 0 20px;
      position: relative;
    }

    nav ul li a {
      text-decoration: none;
      color: white;
      font-weight: 500;
      padding: 10px 15px;
      border-radius: 25px;
      transition: all 0.3s ease;
      display: flex;
      align-items: center;
      position: relative;
      overflow: hidden;
    }

    nav ul li a::before {
      content: '';
      position: absolute;
      top: 0;
      left: -100%;
      width: 100%;
      height: 100%;
      background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);
      transition: left 0.5s;
    }

    nav ul li a:hover::before {
      left: 100%;
    }

    nav ul li a:hover {
      background: rgba(255, 255, 255, 0.1);
      transform: translateY(-2px);
      box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);
    }

    .username-link {
      background: linear-gradient(45deg, #ff6b6b, #ee5a24) !important;
      border-radius: 25px !important;
      padding: 8px 15px !important;
      transition: all 0.3s ease !important;
      font-weight: bold !important;
    }

    .username-link:hover {
      background: linear-gradient(45deg, #ee5a24, #ff6b6b) !important;
      transform: translateY(-2px) !important;
      box-shadow: 0 8px 25px rgba(238, 90, 36, 0.4) !important;
    }

    .sidebar {
      position: fixed;
      top: 0;
      right: 0;
      height: 100vh;
      width: 300px;
      background: rgba(44, 62, 80, 0.95);
      backdrop-filter: blur(15px);
      box-shadow: -10px 0 30px rgba(0, 0, 0, 0.3);
      display: none;
      flex-direction: column;
      align-items: flex-start;
      justify-content: flex-start;
      z-index: 999;
      transform: translateX(100%);
      transition: transform 0.3s ease;
    }

    .sidebar.show {
      transform: translateX(0);
    }

    .sidebar li, .sidebar a {
      width: 100%;
      padding: 20px;
      color: white;
      border-bottom: 1px solid rgba(255, 255, 255, 0.1);
    }

    .menu-btn {
      display: none;
    }

    @media (max-width: 800px) {
      .hideonphone {
        display: none;
      }
      .menu-btn {
        display: block;
      }
    }

    @media (max-width: 400px) {
      .sidebar {
        width: 100%;
      }
    }

    .flex-container {
      display: flex;
      width: 100%;
      max-width: 1400px;
      gap: 40px;
      margin-bottom: 40px;
      flex-wrap: wrap;
    }

    .details {
      flex: 1;
      min-width: 400px;
      background: white;
      border-radius: 20px;
      padding: 40px;
      box-shadow: 0 20px 60px rgba(0, 0, 0, 0.1);
      position: relative;
      overflow: hidden;
    }

    .details::before {
      content: '';
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      height: 5px;
      background: linear-gradient(90deg, #ff6b6b, #ee5a24, #ff6b6b);
      background-size: 200% 100%;
      animation: gradient 3s linear infinite;
    }

    @keyframes gradient {
      0% { background-position: 0% 50%; }
      50% { background-position: 100% 50%; }
      100% { background-position: 0% 50%; }
    }

    .details h2 {
      color: #2d3748;
      font-size: 2.5em;
      margin-bottom: 30px;
      background: linear-gradient(45deg, #ff6b6b, #ee5a24);
      -webkit-background-clip: text;
      -webkit-text-fill-color: transparent;
      background-clip: text;
    }

    .container {
      flex: 1;
      min-width: 400px;
      background: white;
      border-radius: 20px;
      padding: 40px;
      box-shadow: 0 20px 60px rgba(0, 0, 0, 0.1);
      position: relative;
      overflow: hidden;
    }

    .container::before {
      content: '';
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      height: 5px;
      background: linear-gradient(90deg, #667eea, #764ba2, #667eea);
      background-size: 200% 100%;
      animation: gradient 3s linear infinite;
    }

    .container h2 {
      color: #2d3748;
      font-size: 2.5em;
      margin-bottom: 30px;
      background: linear-gradient(45deg, #667eea, #764ba2);
      -webkit-background-clip: text;
      -webkit-text-fill-color: transparent;
      background-clip: text;
    }

    form {
      display: flex;
      flex-direction: column;
      gap: 20px;
    }

    input[type="text"], input[type="number"], input[type="date"] {
      width: 100%;
      padding: 15px;
      border: 2px solid #e2e8f0;
      border-radius: 12px;
      font-size: 1.1em;
      transition: all 0.3s ease;
    }

    input:focus {
      outline: none;
      border-color: #667eea;
      box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);
    }

    button {
      padding: 15px 20px;
      background: linear-gradient(45deg, #667eea, #764ba2);
      color: white;
      border: none;
      cursor: pointer;
      font-weight: 600;
      font-size: 1.2em;
      border-radius: 12px;
      transition: all 0.3s ease;
    }

    button:hover {
      transform: translateY(-3px);
      box-shadow: 0 10px 25px rgba(102, 126, 234, 0.3);
    }

    iframe {
      width: 100%;
      height: 500px;
      border: none;
      border-radius: 20px;
      box-shadow: 0 20px 60px rgba(0, 0, 0, 0.1);
      max-width: 1400px;
    }

    .entry {
      background: linear-gradient(135deg, #fff 0%, #f8f9fa 100%);
      border: 1px solid #e2e8f0;
      border-radius: 20px;
      padding: 25px;
      margin-bottom: 25px;
      box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
      transition: all 0.4s ease;
      position: relative;
      overflow: hidden;
    }

    .entry::before {
      content: '';
      position: absolute;
      top: 0;
      left: -100%;
      width: 100%;
      height: 100%;
      background: linear-gradient(90deg, transparent, rgba(102, 126, 234, 0.1), transparent);
      transition: left 0.7s;
    }

    .entry:hover::before {
      left: 100%;
    }

    .entry:hover {
      transform: translateY(-5px) scale(1.02);
      box-shadow: 0 20px 40px rgba(102, 126, 234, 0.2);
      border-color: #667eea;
    }

    .entry div {
      cursor: pointer;
      color: #4a5568;
      line-height: 1.8;
      font-size: 1.1em;
      margin-bottom: 20px;
    }

    .entry div strong {
      color: #2d3748;
      font-weight: 700;
    }

    .entry button {
      margin-right: 15px;
      padding: 10px 20px;
      border: none;
      border-radius: 8px;
      cursor: pointer;
      font-weight: 600;
      transition: all 0.3s ease;
      font-size: 0.95em;
    }

    .entry button.edit {
      background: linear-gradient(45deg, #48bb78, #38a169);
      color: white;
    }

    .entry button.edit:hover {
      transform: translateY(-2px);
      box-shadow: 0 8px 20px rgba(72, 187, 120, 0.3);
    }

    .entry button.delete {
      background: linear-gradient(45deg, #f56565, #e53e3e);
      color: white;
    }

    .entry button.delete:hover {
      transform: translateY(-2px);
      box-shadow: 0 8px 20px rgba(245, 101, 101, 0.3);
    }

    /* Floating Animation */
    @keyframes float {
      0%, 100% { transform: translateY(0px); }
      50% { transform: translateY(-10px); }
    }

    .entry:nth-child(odd) {
      animation: float 6s ease-in-out infinite;
    }

    .entry:nth-child(even) {
      animation: float 6s ease-in-out infinite 3s;
    }

    /* Responsive Design */
    @media (max-width: 1200px) {
      .flex-container {
        flex-direction: column;
      }
      
      .details, .container {
        min-width: unset;
      }
    }

    @media (max-width: 768px) {
      body {
        padding-left: 10px;
        padding-right: 10px;
      }
      
      .details, .container {
        padding: 20px;
      }
      
      .details h2, .container h2 {
        font-size: 2em;
      }
    }

    /* Loading Animation */
    @keyframes pulse {
      0%, 100% { opacity: 1; }
      50% { opacity: 0.5; }
    }

    .loading {
      animation: pulse 2s infinite;
    }
  </style>
</head>
<body>

  <nav>
    <div class="nav-container">
      <ul class="sidebar">
        <li onclick="hidesidebar()">
          <a href="#"><svg xmlns="http://www.w3.org/2000/svg" height="30px" viewBox="0 -960 960 960" width="30px" fill="#e3e3e3"><path d="m256-200-56-56 224-224-224-224 56-56 224 224 224-224 56 56-224 224 224 224-56 56-224-224-224 224Z"/></svg></a>
        </li>
        <li><a href="index">Home</a></li>
        <li><a href="index">About</a></li>
        <li><a href="#progarm">Program</a></li>
        <li><a href="index">Contact Us</a></li>
        <% if (user) { %>
          <li><a href="#" onclick="event.preventDefault(); logout();" class="username-link">👤 <%= user.name %></a></li>
        <% } else { %>
          <li><a href="/login">Login</a></li>
        <% } %>
      </ul>
      <a href="/en" class="logo-link">
        <img src="https://www.river-cleanup.org/images/logo.png" alt="River CleanUp Logo" class="logo">
      </a>
      <ul>
        <li class="hideonphone"><a href="index">Home</a></li>
        <li class="hideonphone"><a href="index">About</a></li>
        <li class="hideonphone"><a href="#progarm">Program</a></li>
        <li class="hideonphone"><a href="index">Contact Us</a></li>
        <% if (user) { %>
          <li class="hideonphone"><a href="#" onclick="event.preventDefault(); logout();" class="username-link">👤 <%= user.name %></a></li>
        <% } else { %>
          <li class="hideonphone"><a href="/login">Login</a></li>
        <% } %>
        <li class="menu-btn" onclick="showsidebar()">
          <a href="#"><svg xmlns="http://www.w3.org/2000/svg" height="30px" viewBox="0 -960 960 960" width="30px" fill="#e3e3e3"><path d="M120-240v-80h720v80H120Zm0-200v-80h720v80H120Zm0-200v-80h720v80H120Z"/></svg></a>
        </li>
      </ul>
    </div>
  </nav>

  <div class="flex-container" id="progarm">
    <div class="details" id="outputInfo" style="flex: 1;">
      <div id="infoList"><h2>Events:</h2></div>
    </div>
    <div class="container" style="flex: 1;">
      <h2>Find a Route</h2>
      <form id="eventForm">
        <input type="text" id="address" placeholder="Enter destination address*" required>
        <input type="number" id="workers" placeholder="Enter number of persons required*" min="1" required>
        <input type="date" id="Date" required><br><br>
        <button type="submit">Submit</button>
      </form>
    </div>
  </div>

  <iframe id="mapFrame" src="" allowfullscreen></iframe>

  <script>
    // Pass user data to JavaScript safely
    window.userData = <%= user ? JSON.stringify(user) : 'null' %>;
    
    function showsidebar() {
      document.querySelector('.sidebar').style.display = 'flex';
    }

    function hidesidebar() {
      document.querySelector('.sidebar').style.display = 'none';
    }

    document.getElementById('eventForm').addEventListener('submit', handleSubmit);

    async function handleSubmit(event) {
      event.preventDefault();
      
      // Check if user is logged in
      if (!window.userData) {
        alert("You must be logged in to create events.");
        window.location.href = '/login';
        return;
      }

      const address = document.getElementById('address').value;
      const workers = document.getElementById('workers').value;
      const date = document.getElementById('Date').value;
      const encodedAddress = encodeURIComponent(address);

      try {
        const response = await fetch('/submit', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({ address, workers, date })
        });

        if (!response.ok) {
          const errorText = await response.text();
          alert("Failed to save event: " + errorText);
          return;
        }

        const savedEvent = await response.json();
        showEntry(savedEvent);
      } catch (error) {
        console.error('Error saving event:', error);
        alert("Server error.");
      }

      document.getElementById('mapFrame').src = `https://maps.google.com/maps?saddr=My+Location&daddr=${encodedAddress}&output=embed`;
      document.getElementById('address').value = '';
      document.getElementById('workers').value = '';
      document.getElementById('Date').value = '';
    }

    function showEntry(event) {
      if (!event || !event.address || !event.workers || !event.date) return;

      const { _id, address, workers, date, createdBy } = event;
      const encodedAddress = encodeURIComponent(address);

      const entry = document.createElement('div');
      entry.className = 'entry';

      const content = document.createElement('div');
      content.innerHTML = `
        <strong>Address:</strong> ${address}<br>
        <strong>Workers:</strong> ${workers}<br>
        <strong>Date:</strong> ${date}<br>
        <strong>Created by:</strong> ${createdBy?.name || 'Unknown'}
      `;
      content.onclick = () => window.open(`https://www.google.com/maps/dir/?api=1&destination=${encodedAddress}`, '_blank');

      entry.appendChild(content);

      // Only show edit/delete buttons if the current user created this event
      if (window.userData && createdBy && createdBy._id === window.userData.id) {
        const editBtn = document.createElement('button');
        editBtn.className = 'edit';
        editBtn.textContent = 'Edit';
        editBtn.onclick = () => {
          document.getElementById('address').value = address;
          document.getElementById('workers').value = workers;
          document.getElementById('Date').value = date;
          entry.remove();
        };

        const deleteBtn = document.createElement('button');
        deleteBtn.className = 'delete';
        deleteBtn.textContent = 'Delete';
        deleteBtn.onclick = async () => {
          if (_id) {
            try {
              const res = await fetch(`/events/${_id}`, { method: 'DELETE' });
              if (!res.ok) {
                const errorText = await res.text();
                return alert("Delete failed: " + errorText);
              }
              entry.remove();
            } catch (error) {
              console.error('Error deleting event:', error);
              alert("Delete failed.");
            }
          }
        };

        entry.appendChild(editBtn);
        entry.appendChild(deleteBtn);
      }

      document.getElementById('infoList').appendChild(entry);
    }

    window.onload = async () => {
      try {
        const res = await fetch('/events');
        const events = await res.json();
        events.forEach(showEntry);
      } catch (e) {
        console.error("Error loading events:", e);
      }
    };

    async function logout() {
      try {
        await fetch('/logout', {
          credentials: 'include'
        });
        window.location.href = '/';
      } catch (err) {
        alert("Logout failed.");
      }
    }
  </script>
</body>
</html>
